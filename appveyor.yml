version: 'test-{build}'
environment:
  global:
    CMD_IN_ENV: 'cmd /E:ON /V:ON /C .\appveyor\run_with_env.cmd'
  matrix:
    - platform: x86
      nodejs_version: '6'
      PYTHON: 'C:\Python36'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '32'
    - platform: x64
      nodejs_version: '6'
      PYTHON: 'C:\Python36-x64'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '64'
    - platform: x86
      nodejs_version: '8'
      PYTHON: 'C:\Python36'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '32'
    - platform: x64
      nodejs_version: '8'
      PYTHON: 'C:\Python36-x64'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '64'
    - platform: x86
      nodejs_version: '10'
      PYTHON: 'C:\Python36'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '32'
    - platform: x64
      nodejs_version: '10'
      PYTHON: 'C:\Python36-x64'
      PYTHON_VERSION: 3.6.5
      PYTHON_ARCH: '64'
    - nodejs_version: '12'
clone_folder: 'c:\projects\%APPVEYOR_PROJECT_NAME%'
install:
  - '%PYTHON%\python.exe -m pip install wheel nose'
  - ps: 'if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }'
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  - ps: 'Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform'
  - ps: '$NpmVersion = (npm -v).Substring(0,1)'
  - ps: 'if($NpmVersion -eq 5) { npm install -g npm@5 }'
  - ps: npm --version
  - npm install --unsafe-perm
test_script:
  - echo %cd%
  - node --version
  - npm --version
  - 'npm run test:unit'
  - 'npm run test:integration'
  - 'npm run test:package'
build: 'off'
